/**
 * 
 */
package vip;

import java.util.ArrayList;
import java.util.HashMap;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import tools.Config;
import tools.CustomProgressDialog;
import tools.Exit;
import tools.Tools;

import com.mkcomingc.BaseActivity;
import com.mkcomingc.R;

import designers.DesignerInfo;
import designers.DesignersList;

import adapter.MyCollectionListAdapter;
import android.app.Activity;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.Toast;

/**
 * @author Liming Chu
 * 
 * @param
 * @return
 */
public class MyCollection extends BaseActivity {

    private ImageView back;
    private ListView lv;

    private ArrayList<HashMap<String, String>> list;

    /*
     * (non-Javadoc)
     * 
     * @see com.mkcomingc.BaseActivity#onResume()
     */
    @Override
    protected void onResume() {
	// TODO Auto-generated method stub
	super.onResume();
    }

    /*
     * (non-Javadoc)
     * 
     * @see com.mkcomingc.BaseActivity#onPause()
     */
    @Override
    protected void onPause() {
	// TODO Auto-generated method stub
	super.onPause();
    }

    /*
     * (non-Javadoc)
     * 
     * @see android.app.Activity#onCreate(android.os.Bundle)
     */
    @Override
    protected void onCreate(Bundle savedInstanceState) {
	// TODO Auto-generated method stub
	super.onCreate(savedInstanceState);
	setContentView(R.layout.my_collection);
	Exit.getInstance().addActivity(this);
	prepareView();

	new AsyncTask<Void, Void, String>() {
	    private CustomProgressDialog pd;

	    @Override
	    protected void onPreExecute() {
		// TODO Auto-generated method stub
		super.onPreExecute();
		pd = CustomProgressDialog.createDialog(MyCollection.this);
		pd.show();
		list = new ArrayList<HashMap<String, String>>();
	    }

	    @Override
	    protected String doInBackground(Void... params) {
		// TODO Auto-generated method stub
		String url = Config.MY_COLLECTION_LIST_URL
			+ new Tools().getUserId(MyCollection.this);
		Log.e("url", url);
		String data = new Tools().getURL(url);
		System.out.println(data);
		String code = "";
		try {
		    JSONObject jObject = new JSONObject(data);
		    JSONObject result = jObject.getJSONObject("result");
		    code = result.getString("code");
		    if (code.equals("1")) {
			JSONArray jArray = jObject.getJSONArray("data");
			for (int i = 0, j = jArray.length(); i < j; i++) {
			    JSONObject job = jArray.optJSONObject(i);
			    HashMap<String, String> hashMap = new HashMap<String, String>();
			    hashMap.put("id", job.getString("id"));
			    hashMap.put("xm", job.getString("xm"));
			    hashMap.put("xb", job.getString("xb"));
			    hashMap.put("dj", job.getString("dj"));
			    hashMap.put("pic", job.getString("pic"));
			    hashMap.put("ds", job.getString("ds"));
			    hashMap.put("zypj", job.getString("zypj"));
			    hashMap.put("fwpj", job.getString("fwpj"));

			    list.add(hashMap);
			}
			Message msg = handler.obtainMessage();
			msg.sendToTarget();
		    }
		} catch (JSONException e) {
		    // TODO Auto-generated catch block
		    e.printStackTrace();
		}
		return code;
	    }

	    @Override
	    protected void onPostExecute(String result) {
		// TODO Auto-generated method stub
		super.onPostExecute(result);
		pd.dismiss();
		if (result.equals("1")) {

		} else {
		    Toast.makeText(MyCollection.this, "获取收藏列表失败，请重试！",
			    Toast.LENGTH_SHORT).show();
		    //finish();
		}
	    }
	}.execute();
    }

    private Handler handler = new Handler() {

	@Override
	public void handleMessage(Message msg) {
	    // TODO Auto-generated method stub
	    super.handleMessage(msg);
	    MyCollectionListAdapter adapter = new MyCollectionListAdapter(list,
		    MyCollection.this);
	    lv.setAdapter(adapter);
	    lv.setOnItemClickListener(new OnItemClickListener() {

		@Override
		public void onItemClick(AdapterView<?> parent, View view,
			int position, long id) {
		    // TODO Auto-generated method stub
		    Intent intent = new Intent(MyCollection.this,
			    DesignerInfo.class);
		    intent.putExtra("zid", list.get(position).get("id"));
		    intent.putExtra("zrid", "");
		    intent.putExtra("name", "");
		    intent.putExtra("type", "frag");
		    intent.putExtra("sqid", "");
		    intent.putExtra("sel", "");// addrSel, 地址选择方式，
					       // 1位只有商圈，
					       // 2位详细地址
		    intent.putExtra("address", "");
		    startActivity(intent);

		}
	    });
	}

    };

    private void prepareView() {
	back = (ImageView) findViewById(R.id.title_back);
	lv = (ListView) findViewById(R.id.my_collection_lv);

	back.setOnClickListener(new OnClickListener() {

	    @Override
	    public void onClick(View v) {
		// TODO Auto-generated method stub
		finish();
	    }
	});
    }
}
